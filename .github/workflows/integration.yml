name: Integration tests

on: pull_request

permissions:
  contents: read

concurrency:
  group: integration-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.versions.outputs.matrix }}
    steps:
      - name: Checkout app
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Get version matrix
        id: versions
        uses: icewind1991/nextcloud-version-matrix@58becf3b4bb6dc6cef677b15e2fd8e7d48c0908f # v1.3.1

  changes:
    runs-on: ubuntu-latest

    outputs:
      src: ${{ steps.changes.outputs.src}}

    steps:
      - uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.11.1
        id: changes
        continue-on-error: true
        with:
          filters: |
            src:
              - '.github/workflows/**'
              - 'appinfo/**'
              - 'lib/**'
              - 'templates/**'
              - 'tests/**'
              - 'vendor/**'
              - 'vendor-bin/**'
              - '.php-cs-fixer.dist.php'
              - 'composer.json'
              - 'composer.lock'

  integration:
    runs-on: ubuntu-latest

    needs: [changes, matrix]
    if: needs.changes.outputs.src != 'false'

    strategy:
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}

    name: Integrations - PHP ${{ matrix.php-versions }} Nextcloud ${{ matrix.server-versions }}

    steps:
      - name: Set app env
        run: |
          # Split and keep last
          echo "APP_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      - name: Checkout server
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          submodules: true
          repository: nextcloud/server
          ref: ${{ matrix.server-versions }}

      - name: Checkout app
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          path: apps/${{ env.APP_NAME }}

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@81cd5ae0920b34eef300e1775313071038a53429 # v2
        with:
          php-version: ${{ matrix.php-versions }}
          # https://docs.nextcloud.com/server/stable/admin_manual/installation/source_installation.html#prerequisites-for-manual-installation
          extensions: bz2, ctype, curl, dom, fileinfo, gd, iconv, intl, json, libxml, mbstring, openssl, pcntl, posix, session, simplexml, xmlreader, xmlwriter, zip, zlib, sqlite, pdo_sqlite, inotify
          coverage: none
          ini-file: development
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check composer file existence
        id: check_composer
        uses: andstor/file-existence-action@20b4d2e596410855db8f9ca21e96fbe18e12930b # v2
        with:
          files: apps/${{ env.APP_NAME }}/composer.json

      - name: Set up dependencies
        # Only run if phpunit config file exists
        if: steps.check_composer.outputs.files_exists == 'true'
        working-directory: apps/${{ env.APP_NAME }}
        run: composer i

      - name: Set up Nextcloud
        env:
          DB_PORT: 4444
        run: |
          mkdir data
          ./occ maintenance:install --verbose --database=sqlite --database-name=nextcloud --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass admin
          ./occ app:enable --force files_external

      - name: Setup local external storage
        run: |
          mkdir /tmp/ext
          ./occ files_external:create local local null::null
          ./occ files_external:config 1 datadir /tmp/ext
          ./occ files_external:list

      - name: Check that local external storage doesn't support notify without the app
        run: |
          set +e

          # notify command runs forever, so use timeout to distinguish between "failed to start" and "started running"
          timeout 2 ./occ files_external:notify 1
          status=$?
          echo "exit code: $status"

          set -e

          [ $status -eq 1 ]

      - name: Enable app
        run: |
          ./occ app:enable --force ${{ env.APP_NAME }}

      - name: Check that local external storage supports notify with the app
        run: |
          set +e

          # notify command runs forever, so use timeout to distinguish between "failed to start" and "started running"
          output=$(timeout 2 ./occ files_external:notify 1 -v )
          status=$?
          echo "exit code: $status"
          echo "output: $output"

          set -e

          [ $status -eq 124 ]
          [[ $output == *"Self-test successful"* ]]

      - name: Print logs
        if: always()
        run: |
          cat data/nextcloud.log

  summary:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: [changes, integration]

    if: always()

    name: integration-summary

    steps:
      - name: Summary status
        run: if ${{ needs.changes.outputs.src != 'false' && needs.integration.result != 'success' }}; then exit 1; fi
